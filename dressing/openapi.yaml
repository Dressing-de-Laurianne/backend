openapi: 3.0.3
info:
  title: Dressing API
  version: 1.0.0
  description: API documentation for the Dressing project
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /hangers/:
    get:
      operationId: hangers_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - hangers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedHangerList'
          description: ''
    post:
      operationId: hangers_create
      tags:
      - hangers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hanger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hanger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hanger'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hanger'
          description: ''
  /hangers/{id}/:
    get:
      operationId: hangers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - hangers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hanger'
          description: ''
    put:
      operationId: hangers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - hangers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hanger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Hanger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Hanger'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hanger'
          description: ''
    patch:
      operationId: hangers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - hangers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHanger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHanger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHanger'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hanger'
          description: ''
    delete:
      operationId: hangers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - hangers
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /items/:
    get:
      operationId: items_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemList'
          description: ''
    post:
      operationId: items_create
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /items/{id}/:
    get:
      operationId: items_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: items_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: items_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: items_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /orders/:
    get:
      operationId: orders_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrderList'
          description: ''
    post:
      operationId: orders_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /orders/{id}/:
    get:
      operationId: orders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: orders_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: orders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: orders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - orders
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /outfits/:
    get:
      operationId: outfits_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - outfits
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOutfitList'
          description: ''
    post:
      operationId: outfits_create
      tags:
      - outfits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outfit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Outfit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Outfit'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outfit'
          description: ''
  /outfits/{id}/:
    get:
      operationId: outfits_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - outfits
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outfit'
          description: ''
    put:
      operationId: outfits_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - outfits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Outfit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Outfit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Outfit'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outfit'
          description: ''
    patch:
      operationId: outfits_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - outfits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOutfit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOutfit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOutfit'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Outfit'
          description: ''
    delete:
      operationId: outfits_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - outfits
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /tag_read/:
    get:
      operationId: tag_read_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - tag_read
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagReadList'
          description: ''
    post:
      operationId: tag_read_create
      tags:
      - tag_read
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRead'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRead'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRead'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRead'
          description: ''
  /tag_read/{id}/:
    get:
      operationId: tag_read_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tag_read
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagRead'
          description: ''
    delete:
      operationId: tag_read_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tag_read
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /tag_wait/{type}/{id}/:
    get:
      operationId: tag_wait_retrieve
      description: |-
        Send a item or hanger ID to wait for a tag.
        This function checks if a tag is waiting for an item or hanger ID.
      parameters:
      - in: path
        name: id
        schema:
          type: string
          pattern: ^\d+$
        required: true
      - in: path
        name: type
        schema:
          type: string
          pattern: ^hanger|item$
        required: true
      tags:
      - tag_wait
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /tags/:
    get:
      operationId: tags_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - tags
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTagList'
          description: ''
    post:
      operationId: tags_create
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  /tags/{id}/:
    get:
      operationId: tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tags
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: tags_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: tags_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTag'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: tags_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - tags
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      description: API endpoint that allows users to be viewed or edited.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this utilisateur.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    ColorEnum:
      enum:
      - Beige
      - Black
      - Blue
      - Brown
      - Green
      - Grey
      - Orange
      - Pink
      - Purple
      - Red
      - White
      - Yellow
      type: string
      description: |-
        * `Beige` - Beige
        * `Black` - Black
        * `Blue` - Blue
        * `Brown` - Brown
        * `Green` - Green
        * `Grey` - Grey
        * `Orange` - Orange
        * `Pink` - Pink
        * `Purple` - Purple
        * `Red` - Red
        * `White` - White
        * `Yellow` - Yellow
    Hanger:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        mqtt_topic:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        size:
          $ref: '#/components/schemas/SizeEnum'
        type:
          $ref: '#/components/schemas/TypeEnum'
        color:
          oneOf:
          - $ref: '#/components/schemas/ColorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        image:
          type: string
          format: uri
        description:
          type: string
        hanger_id:
          type: integer
          nullable: true
          description: Hanger associated with this item. NULL is no hanger associated.
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - uuid
    Order:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        items:
          type: array
          items:
            type: integer
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
    Outfit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        items:
          type: array
          items:
            type: integer
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
    PaginatedHangerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Hanger'
    PaginatedItemList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Item'
    PaginatedOrderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Order'
    PaginatedOutfitList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Outfit'
    PaginatedTagList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
    PaginatedTagReadList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TagRead'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedHanger:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        mqtt_topic:
          type: string
          maxLength: 100
        created:
          type: string
          format: date-time
          readOnly: true
    PatchedItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        title:
          type: string
          maxLength: 100
        size:
          $ref: '#/components/schemas/SizeEnum'
        type:
          $ref: '#/components/schemas/TypeEnum'
        color:
          oneOf:
          - $ref: '#/components/schemas/ColorEnum'
          - $ref: '#/components/schemas/BlankEnum'
        image:
          type: string
          format: uri
        description:
          type: string
        hanger_id:
          type: integer
          nullable: true
          description: Hanger associated with this item. NULL is no hanger associated.
        created:
          type: string
          format: date-time
          readOnly: true
    PatchedOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        items:
          type: array
          items:
            type: integer
        created:
          type: string
          format: date-time
          readOnly: true
    PatchedOutfit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 100
        description:
          type: string
        items:
          type: array
          items:
            type: integer
        created:
          type: string
          format: date-time
          readOnly: true
    PatchedTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tag:
          type: string
          description: Unique identifier for the tag.
          maxLength: 100
        hanger_id:
          type: integer
          nullable: true
          description: Hanger associated with this tag. NULL is no hanger associated.
        item_id:
          type: integer
          nullable: true
          description: Item associated with this tag. NULL is no item associated.
        created:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Adresse électronique
          maxLength: 254
    SizeEnum:
      enum:
      - L
      - M
      - S
      - XL
      - XS
      - XXL
      type: string
      description: |-
        * `L` - L
        * `M` - M
        * `S` - S
        * `XL` - XL
        * `XS` - XS
        * `XXL` - XXL
    StatusEnum:
      enum:
      - Cancelled
      - Delivered
      - Pending
      - Processing
      type: string
      description: |-
        * `Cancelled` - Cancelled
        * `Delivered` - Delivered
        * `Pending` - Pending
        * `Processing` - Processing
    Tag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tag:
          type: string
          description: Unique identifier for the tag.
          maxLength: 100
        hanger_id:
          type: integer
          nullable: true
          description: Hanger associated with this tag. NULL is no hanger associated.
        item_id:
          type: integer
          nullable: true
          description: Item associated with this tag. NULL is no item associated.
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - tag
    TagRead:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tag:
          type: string
          description: Unique identifier readed.
          maxLength: 100
        created:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - id
      - tag
    TypeEnum:
      enum:
      - Coat
      - Dress
      - Jacket
      - Pants
      - Shirt
      - Skirt
      type: string
      description: |-
        * `Coat` - Coat
        * `Dress` - Dress
        * `Jacket` - Jacket
        * `Pants` - Pants
        * `Shirt` - Shirt
        * `Skirt` - Skirt
    User:
      type: object
      properties:
        username:
          type: string
          title: Nom d’utilisateur
          description: Requis. 150 caractères maximum. Uniquement des lettres, nombres
            et les caractères « @ », « . », « + », « - » et « _ ».
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Adresse électronique
          maxLength: 254
      required:
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
